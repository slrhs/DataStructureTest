#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
#include<string.h>
int count = 10;
struct shucai
{
	int num;
	char caiming[20];
	char maicairen[20];
	int danjia;
	int jin;
	float zhekou;
	float price;
	int rank;
};
struct shucai f[50] = { 
		{ 1, "白菜", "白一", 1, 1, 0.9,0 , 0 },
		{ 2, "青菜", "青二", 2, 1, 0.7,0 , 0 },
		{ 3, "芹菜", "秦三", 3, 2, 0.8, 0, 0 },
		{ 4, "土豆", "涂四", 1, 3, 0.7, 0, 0 },
		{ 5, "冬瓜", "董五", 1, 4, 0.7, 0, 0 },
		{ 6, "黄豆", "黄六", 2, 5, 0.7, 0, 0 },
		{ 7, "菠菜", "柏七", 5, 2, 0.9, 0, 0 },
		{ 8, "番茄", "范八", 4, 1, 0.9, 0, 0 },
		{ 9, "萝卜", "罗九", 3, 2, 0.8, 0, 0 },
		{ 10, "南瓜", "南十", 4, 6, 0.6, 0, 0 }
};


void serch(struct shucai f[])
{
	int i, j = 10;
	char maicairen1[20];
	printf("请输入卖菜人姓名\n");
	scanf("%s", maicairen1);
	getchar();
	printf("编号\t菜名\t卖菜人\t单价\t数量\t折扣\n");
	printf("-----------------------------------------------\n");
	for (i = 0; i<10; i++)
		if (!strcmp(f[i].maicairen, maicairen1))
		{
		printf("%d\t%s\t%s\t%d\t%d\t%f\n", f[i].num, f[i].caiming, f[i].maicairen, f[i].danjia, f[i].jin, f[i].zhekou);
		break;
		}
	if (i == j)
		printf("\n 没有找到该人");
}


void insert(struct shucai f[])
{
	int i,j;
	struct shucai temp;
	printf("请输入新的蔬菜信息(编号,菜名,卖菜人,单价,数量,折扣)\n");
	scanf("%d\t%s\t%s\t%d\t%d\t%f", &f[10].num, f[10].caiming, f[10].maicairen, &f[10].danjia, &f[10].jin, &f[10].zhekou);
	count = count + 1;
	printf("编号\t菜名\t卖菜人\t单价\t数量\t折扣\n");
	for (i = 0; i <count-1;i++)
	{

		for (j = 0; j <count-i-1;j++)
		{
			if (f[j].num > f[j +1].num)
			{
				temp = f[j ];
				f[j ] = f[j+1];
				f[j+1] = temp;
			}
		}
	}
	for (i = 0; i <count; i++)
	printf("%d\t%s\t%s\t%d\t%d\t%f\t\n", f[i].num, f[i].caiming, f[i].maicairen, f[i].danjia, f[i].jin, f[i].zhekou);
}


void delete(struct shucai f[])
{
	int i,tp;
	char caiming2[20];
	printf("请输入该蔬菜的姓名\n");
	scanf("%s", caiming2);
	for (i = 0; i < 10;i++)
	{ 
	     if (!strcmp(f[i].caiming, caiming2))
	     {
		     tp = i;
	     }
	}
	printf("编号\t菜名\t卖菜人\t单价\t数量\t折扣\t价格\t排名\n");
	for (i = tp; i < count; i++)
	{
		f[i].num = f[i + 1].num;
		strcpy(f[i].caiming, f[i + 1].caiming);
		strcpy(f[i].maicairen, f[i + 1].maicairen);
		f[i].danjia = f[i + 1].danjia;
		f[i].jin = f[i + 1].jin;
		f[i].price = f[i + 1].price;
		f[i].rank = f[i + 1].rank;
	}
	for (i = 0; i < count - 1; i++)
	{
		printf("%d\t%s\t%s\t%d\t%d\t%f\t%f\t%d\n", f[i].num, f[i].caiming, f[i].maicairen, f[i].danjia, f[i].jin, f[i].zhekou, f[i].price, f[i].rank);
	}
}


void typesum(struct shucai f[])
{
	int i = 0;
	for (i = 0; i < count; i++)
	{
		f[i].price = f[i].danjia*f[i].jin*(1 - f[i].zhekou);
	}


}


void allsum(struct shucai f[])
{
	typesum(f);
	int i = 0;
	float allmoney=0, alljin=0;
	for (i = 0; i < count; i++)
	{
		allmoney = allmoney + f[i].price;
		alljin = alljin + f[i].jin;
	}
	printf("总价格为%f\t总数量为%f\n", allmoney, alljin);
}


void sort(struct shucai f[])
{
	typesum(f);
	int i,j;
	struct shucai tp;
	for (i = 0; i < count - 1;i++)
	{
		for (j = 0; j < count - 1 - i; ++j)
		{
			if (f[j].price < f[j + 1].price)
			{
				tp = f[j];
				f[j] = f[j + 1];
				f[j + 1] = tp;
			}
		}
	}
	printf("编号\t菜名\t卖菜人\t单价\t数量\t折扣\t\t价格\n");
	for (i = 0; i < count; i++)
	{
		printf("%d\t%s\t%s\t%d\t%d\t%f\t%f\t\n", f[i].num, f[i].caiming, f[i].maicairen, f[i].danjia, f[i].jin, f[i].zhekou, f[i].price);
	}
}
void menu()
{
	printf("----------【蔬菜记录表】-------------\n");
	printf("\t1.输入卖菜人查询卖菜人信息\n");
	printf("\t2.输入新菜名插入并输出\n");
	printf("\t3.输入旧菜名删除并输出\n");
	printf("\t4.求每种菜金额\n");
	printf("\t5.输出所有菜的总数量和总金额\n");
	printf("\t6.所有菜按金额进行降序排序\n");
	printf("\t7.退出系统\n");
	printf("-------------------------------------\n");
	printf("请输入功能选项(1..7)\n");
}

int main()
{
	int i = 0;
	menu();
	char c;
	c = getchar();
	switch (c)
	{
	case '1': 
		serch(f);
		break;
	case '2':  
		insert(f);
		break;
	case '3':
		delete(f);
		break;
	case '4':  
		typesum(f);
		for (i = 0; i < count; i++)
		{
			printf("----------------------------------\n");
			printf("蔬菜名：%s 丨价格：%f\n", f[i].caiming, f[i].price);
		}
		printf("----------------------------------\n");
		break;
	case '5': 
		allsum(f);
		break;
	case '6': 
		sort(f);
		break;
	case '7':
		break;
	default:
		printf("输入错误，请重新输入\n");
		break;
	}
}

